<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
      
      
      
   <context:component-scan base-package="com.springbook.biz"></context:component-scan>   
   
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
   
   <context:property-placeholder location="classpath:config/database.properties"/>
   
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
      <property name="driverClassName" value="${jdbc.driver}"></property>
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.username}" />
      <property name="password" value="${jdbc.password}" />
   </bean>
   
   <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   
   <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name = "dataSource" ref="dataSource"></property>
   </bean>
   
   <tx:advice id="txAdvice" transaction-manager="txManager">
      <tx:attributes>
         <tx:method name="get*" read-only="true"/>
         <tx:method name="*"/>
      </tx:attributes>
   </tx:advice>
   
   <aop:config>
      <aop:pointcut id="txPointcut"  expression="execution(* com.springbook.biz..*(..))"/>
      <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
   </aop:config>
   
   
   
   
   <!-- <bean id="log" class ="com.springbook.biz.common.LogAdvice">
   </bean> -->
   
   <!-- <bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean> -->
   
   <!-- <bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"></bean> -->
   
   <!-- <bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean> -->
   
   <!-- <bean id="after" class="com.springbook.biz.common.AfterAdvice"></bean> -->
   
   <!-- <bean id="around" class="com.springbook.biz.common.AroundAdvice"/> -->
   
   <!-- <aop:config>
      <aop:pointcut id="allPointcut"
         expression="execution(* com.springbook.biz..*Impl.*(..))" />
         
      <aop:pointcut id="getPointcut"
         expression="execution(* com.springbook.biz..*Impl.get*(..))" />
      
      <aop:aspect ref="around">
         <aop:around pointcut-ref="allPointcut" method="aroundLog"/>
      </aop:aspect>
         
      <aop:aspect ref="afterThrowing">
         <aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" />
      </aop:aspect>
      
      <aop:aspect ref="after">
         <aop:after pointcut-ref="allPointcut" method="finallyLog" />
      </aop:aspect>   
   </aop:config>    -->
   
   
   
   <!-- <bean id="userService" class = "com.springbook.biz.user.impl.UserServiceImpl">
      <property name ="userDAO" ref="userDAO"></property>
   </bean>
   
   <bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO">
   </bean> -->
   
   <!-- <context:component-scan base-package="polymorphism"></context:component-scan>
   <bean id="sony" class="polymorphism.AppleSpeaker">
   </bean>    -->

   <!-- <bean id="tv" class="polymorphism.SamsungTV">
      <constructor-arg ref="apple"></constructor-arg>
      <constructor-arg value="270000"></constructor-arg>
      
      <property name="speaker" ref="apple"></property>
      <property name="price" value="270000"></property>
   </bean>
   
   <bean id="sony" class="polymorphism.SonySpeaker">
   </bean>
   
   <bean id="apple" class="polymorphism.AppleSpeaker">
   </bean>
   
   <bean id = "collectionBean" class="com.springbook.ioc.injection.CollectionBean">
      <property name="addressList">
         <list>
            <value>서울시 강남구</value>
            <value>서울시 영등포구</value>
         </list>
         <set value-type="java.lang.String">
            <value>서울시 강남구</value>
            <value>서울시 영등포구</value>
            <value>서울시 영등포구</value>
         </set>
         <map>
            <entry>
               <key><value>고길동</value></key>
               <value>서울시 강남구</value>
            </entry>
            <entry>
               <key><value>홍길동</value></key>
               <value>서울시 영등포구</value>
            </entry>
         </map>
         <props>
            <prop key="고길동">서울시 강남구</prop>
            <prop key="홍길동">서울시 영등포구</prop>
         </props>
      </property>
   </bean> -->
</beans>